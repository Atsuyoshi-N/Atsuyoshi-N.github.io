{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Card/Card.js","webpack:///./src/templates/tags.js","webpack:///./node_modules/@material-ui/core/esm/CardContent/CardContent.js","webpack:///./src/components/PostCard/PostCard.js","webpack:///./src/components/PostCard/index.js"],"names":["Card","props","ref","classes","className","_props$raised","raised","other","root","elevation","overflow","name","Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","variant","align","color","map","node","slug","fields","key","post","to","style","cursor","pageQuery","CardContent","_props$component","component","Component","padding","paddingBottom","useStyles","makeStyles","margin","date","marginTop","cardContent","postTitleLink","textDecoration","borderBottom","readMore","PostCard","frontmatter","Typography","display","title","TagList","dangerouslySetInnerHTML","__html","excerpt"],"mappings":"8FAAA,4EAYIA,EAAoB,cAAiB,SAAcC,EAAOC,GAC5D,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAgBJ,EAAMK,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAQ,YAAyBN,EAAO,CAAC,UAAW,YAAa,WAErE,OAAoB,gBAAoB,IAAO,YAAS,CACtDG,UAAW,YAAKD,EAAQK,KAAMJ,GAC9BK,UAAWH,EAAS,EAAI,EACxBJ,IAAKA,GACJK,OAGU,gBApBK,CAElBC,KAAM,CACJE,SAAU,WAiBoB,CAChCC,KAAM,WADO,CAEZX,I,kCC5BH,0HAyEeY,UAhEF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAD8B,EAERD,EAAKE,kBAA3BC,EAF8B,EAE9BA,MAAOC,EAFuB,EAEvBA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAIf,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CAAYK,QAAQ,KAAKC,MAAM,SAASC,MAAM,iBAC3CH,GAEFF,EAAMM,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACR,OAAO,kBAAC,IAAD,CAAUE,IAAKF,EAAMG,KAAMJ,OAMpC,kBAAC,OAAD,CAAMK,GAAG,SACP,kBAAC,IAAD,CACET,QAAQ,KACRC,MAAM,SACNC,MAAM,UACNQ,MAAO,CACLR,MAAO,iBACP,UAAW,CACTS,OAAQ,aAPd,qBA4CH,IAAMC,EAAS,c,oCC3EtB,gEAcIC,EAA2B,cAAiB,SAAqBhC,EAAOC,GAC1E,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClB8B,EAAmBjC,EAAMkC,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClD3B,EAAQ,YAAyBN,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoB,gBAAoBmC,EAAW,YAAS,CAC1DhC,UAAW,YAAKD,EAAQK,KAAMJ,GAC9BF,IAAKA,GACJK,OAGU,gBAtBK,CAElBC,KAAM,CACJ6B,QAAS,GACT,eAAgB,CACdC,cAAe,MAiBa,CAChC3B,KAAM,kBADO,CAEZsB,I,mICpBGM,G,UAAYC,YAAW,CAC3BhC,KAAM,CACJiC,OAAQ,cAEVC,KAAM,CACJC,UAAW,QAEbC,YAAa,CACXH,OAAQ,SAEVI,cAAe,CACbC,eAAgB,OAChB,UAAW,CACTxB,MAAO,iBACPyB,aAAc,6BAGlBC,SAAU,CACRL,UAAW,WCzBAM,ID6BA,YAA6B,IAATrB,EAAQ,EAARA,KAC3BzB,EAAUoC,IAChB,OACE,yBAAKnC,UAAWD,EAAQK,MACtB,kBAACR,EAAA,EAAD,KACE,kBAACiC,EAAA,EAAD,CAAa7B,UAAWD,EAAQyC,aAC9B,0BAAMxC,UAAWD,EAAQuC,MAAOd,EAAKsB,YAAYR,MACjD,6BACA,6BACA,kBAAC,OAAD,CAAMb,GAAID,EAAKF,OAAOD,MACpB,kBAAC0B,EAAA,EAAD,CACE/B,QAAQ,KACRgC,QAAQ,SACR9B,MAAM,gBACNlB,UAAWD,EAAQ0C,eAElBjB,EAAKsB,YAAYG,QAGtB,6BACA,6BACA,kBAACC,EAAA,EAAD,CAASJ,YAAatB,EAAKsB,cAC3B,kBAACC,EAAA,EAAD,KACE,yBACE/C,UAAU,oBACVmD,wBAAyB,CAAEC,OAAQ5B,EAAK6B,YAG5C,kBAACN,EAAA,EAAD,CACE9B,MAAM,QACND,QAAQ,YACRhB,UAAWD,EAAQ6C,UAEnB,kBAAC,OAAD,CAAMnB,GAAE,GAAKD,EAAKF,OAAOD,MAAzB","file":"component---src-templates-tags-js-ffc6b0c30ce87c831ca7.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import React from 'react'\nimport PropTypes from 'prop-types'\nimport PostCard from '../components/PostCard'\nimport Layout from '../components/Layout'\nimport { Typography } from '@material-ui/core'\n\n// Components\nimport { Link, graphql } from 'gatsby'\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? '' : 's'\n  } tagged with \"${tag}\"`\n\n  return (\n    <Layout>\n      <div>\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\">\n          {tagHeader}\n        </Typography>\n        {edges.map(({ node }) => {\n          const { slug } = node.fields\n          return <PostCard key={slug} post={node} />\n        })}\n        {/*\n              This links to a page that does not yet exist.\n              You'll come back to it!\n            */}\n        <Link to=\"/tags\">\n          <Typography\n            variant=\"h4\"\n            align=\"center\"\n            color=\"primary\"\n            style={{\n              color: 'cornflowerblue',\n              '&:hover': {\n                cursor: 'pointer',\n              },\n            }}\n          >\n            View All tags\n          </Typography>\n        </Link>\n      </div>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt(format: HTML, pruneLength: 100, truncate: true)\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React from 'react'\nimport { Link } from 'gatsby'\nimport TagList from '../TagList'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport { Typography } from '@material-ui/core'\nimport 'katex/dist/katex.min.css'\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '0 10% 30px',\n  },\n  date: {\n    marginTop: '10px',\n  },\n  cardContent: {\n    margin: '0 7px',\n  },\n  postTitleLink: {\n    textDecoration: 'none',\n    '&:hover': {\n      color: 'cornflowerblue',\n      borderBottom: '1px solid cornflowerblue',\n    },\n  },\n  readMore: {\n    marginTop: '15px',\n  },\n})\n\nexport default function PostCard({ post }) {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <Card>\n        <CardContent className={classes.cardContent}>\n          <span className={classes.date}>{post.frontmatter.date}</span>\n          <br />\n          <br />\n          <Link to={post.fields.slug}>\n            <Typography\n              variant=\"h4\"\n              display=\"inline\"\n              color=\"textSecondary\"\n              className={classes.postTitleLink}\n            >\n              {post.frontmatter.title}\n            </Typography>\n          </Link>\n          <br />\n          <br />\n          <TagList frontmatter={post.frontmatter} />\n          <Typography>\n            <div\n              className=\"blog-post-content\"\n              dangerouslySetInnerHTML={{ __html: post.excerpt }}\n            ></div>\n          </Typography>\n          <Typography\n            align=\"right\"\n            variant=\"subtitle2\"\n            className={classes.readMore}\n          >\n            <Link to={`${post.fields.slug}`}>続きを読む...</Link>\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n","import PostCard from './PostCard'\n\nexport default PostCard"],"sourceRoot":""}