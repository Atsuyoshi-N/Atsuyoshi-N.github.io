{"version":3,"file":"component---src-templates-tags-js-36850a943f5411db75b7.js","mappings":"kOAsBA,IAAMA,EAAUC,EAAAA,QAAAA,IAAAA,WAAH,6DAAGA,CAAH,wBAIPC,EAAOD,EAAAA,QAAAA,EAAAA,WAAH,0DAAGA,CAAH,mCAKJE,EAAQF,EAAAA,QAAAA,GAAAA,WAAH,2DAAGA,CAAH,uBAILG,EAAWH,EAAAA,QAAAA,OAAAA,WAAH,8DAAGA,CAAH,qLCjCd,EDIe,YAA6B,IAATI,EAAQ,EAARA,KACjC,OACE,gBAACL,EAAD,KACE,gBAAC,EAAD,KAAOK,EAAKC,YAAYC,MACxB,gBAAC,EAAAC,KAAD,CAAMC,GAAIJ,EAAKK,OAAOC,MACpB,gBAACR,EAAD,KAAQE,EAAKC,YAAYM,QAE3B,gBAACC,EAAA,EAAD,CAASP,YAAaD,EAAKC,cAC3B,gBAACQ,EAAA,EAAD,CAAiBC,KAAMV,EAAKW,UAC5B,gBAACZ,EAAD,KACE,gBAAC,EAAAI,KAAD,CAAMC,GAAE,GAAKJ,EAAKK,OAAOC,MAAzB,a,uFEyDR,UAhEa,SAAC,GAAqC,IAAnCM,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACzBC,EAAQH,EAARG,IACR,EAA8BF,EAAKG,kBAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAIf,OACE,gBAAC,IAAD,CAAQD,SAAUA,GAChB,2BACE,gBAAC,IAAD,CAAYM,QAAQ,KAAKC,MAAM,SAASC,MAAM,iBAC3CH,GAEFF,EAAMM,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJlB,EAASkB,EAAKnB,OAAdC,KACR,OAAO,gBAAC,IAAD,CAAUmB,IAAKnB,EAAMN,KAAMwB,OAMpC,gBAAC,EAAArB,KAAD,CAAMC,GAAG,SACP,gBAAC,IAAD,CACEgB,QAAQ,KACRC,MAAM,SACNC,MAAM,UACNI,MAAO,CACLJ,MAAO,iBACP,UAAW,CACTK,OAAQ,aAPd","sources":["webpack://gatsby-starter-markdown/./src/components/PostCard/PostCard.js","webpack://gatsby-starter-markdown/./src/components/PostCard/index.js","webpack://gatsby-starter-markdown/./src/templates/tags.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport MarkdownArticle from '../MarkdownArticle'\nimport TagList from '../TagList'\nimport styled from 'styled-components'\n\nexport default function PostCard({ post }) {\n  return (\n    <Wrapper>\n      <Date>{post.frontmatter.date}</Date>\n      <Link to={post.fields.slug}>\n        <Title>{post.frontmatter.title}</Title>\n      </Link>\n      <TagList frontmatter={post.frontmatter} />\n      <MarkdownArticle html={post.excerpt} />\n      <ReadMore>\n        <Link to={`${post.fields.slug}`}>続きを読む</Link>\n      </ReadMore>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  margin: 0 10% 50px;\n`\n\nconst Date = styled.p`\n  width: 100%;\n  margin-bottom: 5px;\n`\n\nconst Title = styled.h1`\n  font-size: 1.8rem;\n`\n\nconst ReadMore = styled.button`\n  background-color: #4d4d4d;\n  width: 120px;\n  margin: 0 0 0 auto;\n  border-radius: 0.425rem;\n  display: flex;\n  justify-content: center;\n  a {\n    display: block;\n    width: 100%;\n    color: #fff;\n    padding: 0.5rem 0.5rem;\n  }\n`\n","import PostCard from './PostCard'\n\nexport default PostCard","import React from 'react'\nimport PropTypes from 'prop-types'\nimport PostCard from '../components/PostCard'\nimport Layout from '../components/Layout'\nimport { Typography } from '@material-ui/core'\n\n// Components\nimport { Link, graphql } from 'gatsby'\n\nconst Tags = ({ pageContext, data, location }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? '' : 's'\n  } tagged with \"${tag}\"`\n\n  return (\n    <Layout location={location}>\n      <div>\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\">\n          {tagHeader}\n        </Typography>\n        {edges.map(({ node }) => {\n          const { slug } = node.fields\n          return <PostCard key={slug} post={node} />\n        })}\n        {/*\n              This links to a page that does not yet exist.\n              You'll come back to it!\n            */}\n        <Link to=\"/tags\">\n          <Typography\n            variant=\"h4\"\n            align=\"center\"\n            color=\"primary\"\n            style={{\n              color: 'cornflowerblue',\n              '&:hover': {\n                cursor: 'pointer',\n              },\n            }}\n          >\n            View All tags\n          </Typography>\n        </Link>\n      </div>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt(format: HTML, pruneLength: 150, truncate: true)\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["Wrapper","styled","Date","Title","ReadMore","post","frontmatter","date","Link","to","fields","slug","title","TagList","MarkdownArticle","html","excerpt","pageContext","data","location","tag","allMarkdownRemark","edges","totalCount","tagHeader","variant","align","color","map","node","key","style","cursor"],"sourceRoot":""}