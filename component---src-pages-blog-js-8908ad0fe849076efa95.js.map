{"version":3,"sources":["webpack:///./src/components/PostCard/PostCard.js","webpack:///./src/components/PostCard/index.js","webpack:///./src/pages/blog.js"],"names":["useStyles","makeStyles","root","margin","date","marginTop","cardContent","postTitleLink","textDecoration","color","borderBottom","readMore","PostCard","post","classes","console","log","fields","slug","className","Card","CardContent","frontmatter","to","Typography","variant","display","title","TagList","dangerouslySetInnerHTML","__html","excerpt","align","BlogPage","posts","data","allMarkdownRemark","edges","filter","edge","node","map","key","id","pageQuery"],"mappings":"4LASMA,G,UAAYC,YAAW,CAC3BC,KAAM,CACJC,OAAQ,cAEVC,KAAM,CACJC,UAAW,QAEbC,YAAa,CACXH,OAAQ,SAEVI,cAAe,CACbC,eAAgB,OAChB,UAAW,CACTC,MAAO,iBACPC,aAAc,6BAGlBC,SAAU,CACRN,UAAW,WCzBAO,ID6BA,YAA6B,IAATC,EAAQ,EAARA,KAC3BC,EAAUd,IAEhB,OADAe,QAAQC,IAAIH,EAAKI,OAAOC,MAEtB,yBAAKC,UAAWL,EAAQZ,MACtB,kBAACkB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAaF,UAAWL,EAAQR,aAC9B,0BAAMa,UAAWL,EAAQV,MAAOS,EAAKS,YAAYlB,MACjD,6BACA,6BACA,kBAAC,OAAD,CAAMmB,GAAIV,EAAKI,OAAOC,MACpB,kBAACM,EAAA,EAAD,CACEC,QAAQ,KACRC,QAAQ,SACRjB,MAAM,gBACNU,UAAWL,EAAQP,eAElBM,EAAKS,YAAYK,QAGtB,6BACA,6BACA,kBAACC,EAAA,EAAD,CAASN,YAAaT,EAAKS,cAC3B,kBAACE,EAAA,EAAD,KACE,yBACEL,UAAU,oBACVU,wBAAyB,CAAEC,OAAQjB,EAAKkB,YAG5C,kBAACP,EAAA,EAAD,CACEQ,MAAM,QACNP,QAAQ,YACRN,UAAWL,EAAQH,UAEnB,kBAAC,OAAD,CAAMY,GAAE,GAAKV,EAAKI,OAAOC,MAAzB,kB,kCEjEZ,4GAqBee,UAfE,SAAC,GAIX,IACCC,EADF,EAHJC,KACEC,kBAAqBC,MAIpBC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKlB,YAAYlB,QACvCqC,KAAI,SAAAF,GAAI,OAAI,kBAAC,IAAD,CAAUG,IAAKH,EAAKC,KAAKG,GAAI9B,KAAM0B,EAAKC,UACvD,OACE,kBAAC,IAAD,KACE,6BAAMN,KAOL,IAAMU,EAAS","file":"component---src-pages-blog-js-8908ad0fe849076efa95.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport TagList from '../TagList'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport { Typography } from '@material-ui/core'\nimport 'katex/dist/katex.min.css'\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '0 10% 30px',\n  },\n  date: {\n    marginTop: '10px',\n  },\n  cardContent: {\n    margin: '0 7px',\n  },\n  postTitleLink: {\n    textDecoration: 'none',\n    '&:hover': {\n      color: 'cornflowerblue',\n      borderBottom: '1px solid cornflowerblue',\n    },\n  },\n  readMore: {\n    marginTop: '15px',\n  },\n})\n\nexport default function PostCard({ post }) {\n  const classes = useStyles()\n  console.log(post.fields.slug)\n  return (\n    <div className={classes.root}>\n      <Card>\n        <CardContent className={classes.cardContent}>\n          <span className={classes.date}>{post.frontmatter.date}</span>\n          <br />\n          <br />\n          <Link to={post.fields.slug}>\n            <Typography\n              variant=\"h4\"\n              display=\"inline\"\n              color=\"textSecondary\"\n              className={classes.postTitleLink}\n            >\n              {post.frontmatter.title}\n            </Typography>\n          </Link>\n          <br />\n          <br />\n          <TagList frontmatter={post.frontmatter} />\n          <Typography>\n            <div\n              className=\"blog-post-content\"\n              dangerouslySetInnerHTML={{ __html: post.excerpt }}\n            ></div>\n          </Typography>\n          <Typography\n            align=\"right\"\n            variant=\"subtitle2\"\n            className={classes.readMore}\n          >\n            <Link to={`${post.fields.slug}`}>続きを読む...</Link>\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n","import PostCard from './PostCard'\n\nexport default PostCard","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport PostCard from '../components/PostCard'\nimport 'katex/dist/katex.min.css'\n\nconst BlogPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const posts = edges\n    .filter(edge => !!edge.node.frontmatter.date)\n    .map(edge => <PostCard key={edge.node.id} post={edge.node} />)\n  return (\n    <Layout>\n      <div>{posts}</div>\n    </Layout>\n  )\n}\n\nexport default BlogPage\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { rootPage: { eq: $path } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          id\n          excerpt(format: HTML, pruneLength: 100, truncate: true)\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            rootPage\n            title\n            tags\n          }\n          html\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}